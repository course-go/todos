---
openapi: 3.1.0
info:
  title: Todos API
  version: 1.0.0
  description: A simple todo app API
  license:
    name: CC BY-SA 4.0 DEED
    url: https://creativecommons.org/licenses/by-sa/4.0/deed.en

servers:
  - url: http://localhost:{port}/{basePath}
    description: Localhost development server
    variables:
      port:
        default: '8080'
      basePath:
        default: api/v1

tags:
  - name: todo
    description: Everything about your todos

paths:
  /todos:
    get:
      tags:
        - todo
      summary: Find todos
      description: Returns all todos.
      operationId: getTodos
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                data:
                  todos:
                    - id: d1b9e736-e664-4f29-9000-5c826f6ad84c
                      description: Do the dishes
                      completedAt: "2024-05-05 10:52:34.303361Z"
                      createdAt: "2024-05-05 10:51:41.740638Z"
                      updatedAt: "2024-05-05 10:52:34.303361Z"
                    - id: 7001c5a8-0349-47a8-8a95-cb7b5debac0c
                      description: Mop the floor
                      createdAt: "2024-05-05 10:51:41.740638Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "Internal server error"

    post:
      tags:
        - todo
      summary: Create  todo
      description: Creates todo and returns it.
      operationId: createTodo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodo'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
              example:
                data:
                  todo:
                    id: d1b9e736-e664-4f29-9000-5c826f6ad84c
                    description: Do the dishes
                    createdAt: "2024-05-05 10:51:41.740638Z"
                    updatedAt: "2024-05-05 10:51:41.740638Z"
        '400':
          description: Invalid request body supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "Bad request"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "Internal server error"
  /todos/{todoId}:
    get:
      tags:
        - todo
      summary: Find todo
      description: Returns a single todo.
      operationId: getTodo
      parameters:
        - name: todoId
          in: path
          description: ID of todo
          required: true
          schema:
            type: string
            examples: ["d1b9e736-e664-4f29-9000-5c826f6ad84c"]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
              example:
                data:
                  todo:
                    id: d1b9e736-e664-4f29-9000-5c826f6ad84c
                    description: Do the dishes
                    completedAt: "2024-05-05 10:52:34.303361Z"
                    createdAt: "2024-05-05 10:51:41.740638Z"
                    updatedAt: "2024-05-05 10:52:34.303361Z"
        '400':
          description: Invalid UUID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "error message"
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "error message"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "Internal server error"
    put:
      tags:
        - todo
      summary: Update todo
      description: Updates a single todo.
      operationId: updateTodo
      parameters:
        - name: todoId
          in: path
          description: ID of todo
          required: true
          schema:
            type: string
            examples:
              - "d1b9e736-e664-4f29-9000-5c826f6ad84c"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatedTodo'
            example:
              description: Do the dishes
              completedAt: "2024-05-05 10:52:34.303361Z"
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: Invalid request body or UUID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "error message"
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "error message"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "Internal server error"
    delete:
      tags:
        - todo
      summary: Delete todo
      description: Deletes a single todo.
      operationId: deleteTodo
      parameters:
        - name: todoId
          in: path
          description: ID of todo
          required: true
          schema:
            type: string
            examples:
              - "d1b9e736-e664-4f29-9000-5c826f6ad84c"
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid UUID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "error message"
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "error message"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                error: "Internal server error"

components:
  schemas:
    Todo:
      type: object
      required:
        - id
        - description
        - createdAt
      properties:
        id:
          type: string
          examples:
            - "4319fe6a-49bb-4599-ac66-19373960028e"
        description:
          type: string
          examples:
            - "Vacuum"
        createdAt:
          type: string
          examples:
            - "2024-05-05 10:49:25.505509Z"
        updatedAt:
          type: string
          examples:
            - "2024-05-05 10:49:25.505509Z"
        completedAt:
          type: string
          examples:
            - "2024-05-05 10:49:25.505509Z"
    UpdatedTodo:
      type: object
      required:
        - description
        - completedAt
      properties:
        description:
          type: string
          examples:
            - "Vacuum"
        completedAt:
          type: string
          examples:
            - "2024-05-05 10:49:25.505509Z"
    NewTodo:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          examples:
            - "Vacuum"
    TodoResponse:
      type: object
      required:
        - todo
      properties:
        todo:
          $ref: '#/components/schemas/Todo'
    TodosResponse:
      type: object
      required:
        - todos
      properties:
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
    ApiResponse:
      type: object
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TodoResponse'
            - $ref: '#/components/schemas/TodosResponse'
        error:
          type: string
